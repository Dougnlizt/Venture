/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.tjcs.venture;

import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.Box;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import org.tjcs.venture.Utilities.Columns;

/**
 *
 * @author dougthompson
 */
public class SpreadsheetImport extends javax.swing.JDialog {

    /**
     * Creates new form SpreadsheetImport
     */
    public SpreadsheetImport(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        parentFrame = (LotteryFrame) (JFrame) parent;
        initComponents();
        initMyComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPaneFields = new javax.swing.JScrollPane();
        jPanelCustomActions = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanelCustomActions.setLayout(new java.awt.GridBagLayout());
        jScrollPaneFields.setViewportView(jPanelCustomActions);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneFields, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jScrollPaneFields, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpreadsheetImport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpreadsheetImport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpreadsheetImport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpreadsheetImport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SpreadsheetImport dialog = new SpreadsheetImport(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanelCustomActions;
    private javax.swing.JScrollPane jScrollPaneFields;
    // End of variables declaration//GEN-END:variables

    private LotteryFrame parentFrame;
    
    private void initMyComponents() {
        initColumnFields();
    }
    
    private void initColumnFields() {
        GridBagConstraints gbc;
        
        int rowCount = 0;
        
        jPanelCustomActions.removeAll();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = rowCount ++;
        gbc.fill = GridBagConstraints.HORIZONTAL;

//        jPanelCustomActions.add(jButtonCustomizeActions, gbc);
//        
//        Box.Filler gap = new Box.Filler(new Dimension(10, 15), new Dimension(10, 15), new Dimension(10, 15));
//        gbc.gridy = rowCount ++;
//        jPanelCustomActions.add(gap, gbc);
        
        
        //Get all column letters, starting with A through ZZ
        int asciA_StartsAt = 65;
        List<String> charactersArray = new ArrayList<>();
        for (int i = 0; i < 26; i ++) {
            String character = String.valueOf((char) (asciA_StartsAt + i));
            charactersArray.add(character);
        }
        for (int i = 0; i < 26; i ++) {
            String firstCharacter = String.valueOf((char) (asciA_StartsAt + i));
            for (int j = 0; j < 26; j ++) {
                String secondCharacter = String.valueOf((char) (asciA_StartsAt + j));
                charactersArray.add(firstCharacter + secondCharacter);
            }
        }
        
        String[] items = charactersArray.toArray(new String[0]);
        
        for (Columns column : Columns.values()) {
            if (!column.isFromSpreadsheet()) continue;
            JLabel columnLabel = new JLabel(column.getColumnName());
            JComboBox spreadsheetColumnn = new JComboBox(items);
            spreadsheetColumnn.setSelectedItem(column.getSpreadsheetColumn());
            spreadsheetColumnn.setToolTipText("Select the matching column in the spreadsheet");
            spreadsheetColumnn.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    column.setSpreadsheetColumn((String) spreadsheetColumnn.getSelectedItem());
                    parentFrame.saveSettings();
                }
            });
            
            gbc.gridx = 0;
            gbc.gridy = rowCount++;
            jPanelCustomActions.add(columnLabel, gbc);
            gbc.gridx = 1;
            jPanelCustomActions.add(spreadsheetColumnn, gbc);
        }
        
        jPanelCustomActions.revalidate();
        jPanelCustomActions.repaint();
        jScrollPaneFields.revalidate();
        jScrollPaneFields.repaint();
        pack();
    }
}
